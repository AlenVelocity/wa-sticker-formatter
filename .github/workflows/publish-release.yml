name: Release

on: workflow_dispatch

jobs:
  Build:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout Commit
      uses: actions/checkout@v2

    - name: Parsing Package Info
      id: packageInfo
      run: |
        echo "::set-output name=package-name::$(jq -r .name package.json)"
        echo "::set-output name=package-version::$(jq -r .version package.json)"
        echo "::set-output name=commit-msg::$(git log -1 --pretty=%B)"
        
    - name: Setup Node.js environment
      uses: actions/setup-node@v2.1.1
    
    - name: Setup ffmpeg
      uses: FedericoCarboni/setup-ffmpeg@v1
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        id: setup-ffmpeg

    - name: Install Dependencies
      run: npm ci

    - name: Run Tests
      run: npm test

    - name: Build
      run: npm run build

    - name: Debug Release Creation
      run: echo "${{ toJson(steps.packageInfo.outputs) }}"
      
    - name: Create Release
      id: releaseCreate
      uses: actions/create-release@v1
      env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: v${{ steps.packageInfo.outputs.package-version }}
        release_name: v${{ steps.packageInfo.outputs.package-version }}
        body: ${{steps.packageInfo.outputs.commit-msg}}
        draft: false
        prerelease: false
        
    - name: Make Package
      run: npm pack
      
    - name: Rename Pack
      run: mv *.tgz npmPackage.tgz
      
    - name: Git Release
      uses: actions/upload-release-asset@v1.0.2
      env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{steps.releaseCreate.outputs.upload_url}}
        asset_path: npmPackage.tgz
        asset_name: npmPackage.tgz
        asset_content_type: application/x-compressed-tar
    
    - name: NPM Publish
      uses: JS-DevTools/npm-publish@v1
      with:
        token: ${{ secrets.NPM_TOKEN }}